"""Initial migration

Revision ID: 326c0b57e543
Revises: 
Create Date: 2025-09-29 23:45:45.378638

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '326c0b57e543'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('criteria', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('dungeons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('modifiers', sa.JSON(), nullable=False),
    sa.Column('content_version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feature_flags',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slot', sa.String(length=20), nullable=False),
    sa.Column('rarity', sa.String(length=20), nullable=False),
    sa.Column('stats', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('leaderboard_snapshots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('scope', sa.String(length=20), nullable=False),
    sa.Column('period_key', sa.String(length=50), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_leaderboard_snapshots_scope_period', 'leaderboard_snapshots', ['scope', 'period_key'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('apple_sub', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('apple_sub'),
    sa.UniqueConstraint('email')
    )
    op.create_table('daily_challenges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('seed', sa.Integer(), nullable=False),
    sa.Column('dungeon_id', sa.UUID(), nullable=False),
    sa.Column('modifiers', sa.JSON(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['dungeon_id'], ['dungeons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_table('dungeon_tiers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dungeon_id', sa.UUID(), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('boss_meta', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['dungeon_id'], ['dungeons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dungeon_id', 'floor', name='uq_dungeon_tier')
    )
    op.create_index('idx_dungeon_tiers_dungeon_floor', 'dungeon_tiers', ['dungeon_id', 'floor'], unique=False)
    op.create_table('inventory',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('equipped', sa.Boolean(), nullable=False),
    sa.Column('acquired_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'item_id')
    )
    op.create_index('idx_inventory_user_equipped', 'inventory', ['user_id', 'equipped'], unique=False)
    op.create_table('profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('handle', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('xp', sa.Integer(), nullable=False),
    sa.Column('avatar_layers', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('handle')
    )
    op.create_table('questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('dungeon_id', sa.UUID(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('choices', sa.JSON(), nullable=False),
    sa.Column('answer_index', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['dungeon_id'], ['dungeons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_questions_dungeon_difficulty', 'questions', ['dungeon_id', 'difficulty'], unique=False)
    op.create_table('runs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('dungeon_id', sa.UUID(), nullable=False),
    sa.Column('seed', sa.Integer(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('summary', sa.JSON(), nullable=False),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['dungeon_id'], ['dungeons.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_runs_user_created', 'runs', ['user_id', 'started_at'], unique=False)
    op.create_table('user_achievements',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('achievement_id', sa.UUID(), nullable=False),
    sa.Column('progress', sa.JSON(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'achievement_id')
    )
    op.create_table('scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('correct_count', sa.Integer(), nullable=False),
    sa.Column('total_time_ms', sa.Integer(), nullable=False),
    sa.Column('streak_max', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['runs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scores_score', 'scores', [sa.literal_column('score DESC')], unique=False)
    op.create_index('idx_scores_user_created', 'scores', ['user_id', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_scores_user_created', table_name='scores')
    op.drop_index('idx_scores_score', table_name='scores')
    op.drop_table('scores')
    op.drop_table('user_achievements')
    op.drop_index('idx_runs_user_created', table_name='runs')
    op.drop_table('runs')
    op.drop_index('idx_questions_dungeon_difficulty', table_name='questions')
    op.drop_table('questions')
    op.drop_table('profiles')
    op.drop_index('idx_inventory_user_equipped', table_name='inventory')
    op.drop_table('inventory')
    op.drop_index('idx_dungeon_tiers_dungeon_floor', table_name='dungeon_tiers')
    op.drop_table('dungeon_tiers')
    op.drop_table('daily_challenges')
    op.drop_table('users')
    op.drop_index('idx_leaderboard_snapshots_scope_period', table_name='leaderboard_snapshots')
    op.drop_table('leaderboard_snapshots')
    op.drop_table('items')
    op.drop_table('feature_flags')
    op.drop_table('dungeons')
    op.drop_table('achievements')
    # ### end Alembic commands ###
